{"version":3,"sources":["Components/Brand/index.js","Components/Dataconnector/index.js","Components/Pageheader/index.js","Components/Converter/index.js","Page/index.js","App.js","serviceWorker.js","index.js"],"names":["Brand","react_default","a","createElement","className","href","viewBox","fill","fill-rule","cx","cy","r","d","Datareceiver","React","createContext","Dataconnector","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","state","inputValue","romanNumeral","convertIntegerIntoRomanNumber","bind","assertThisInitialized","handleChangeInput","inherits","createClass","key","value","e","setState","target","result","decimal","roman","i","length","Provider","props","children","Component","Pageheader","Consumer","context","console","log","Fragment","Converter","htmlFor","_ref","updateInputValue","type","id","onChange","placeholder","maxlength","onClick","Page","Dataconnector_Dataconnector","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c6d1ad7.chunk.js","sourcesContent":["import React from 'react';\nimport './brand.css';\n\nexport default function Brand() {\n    return(\n        <div className='b-brand'>\n            <a className=\"brand-inner\" href='https://www.pincamp.de/'>\n                <h2 className='brand-title'>Pincamp</h2>\n                <svg className=\"brand-logo\" viewBox=\"0 0 222 222\">\n                    <g fill=\"none\" fill-rule=\"evenodd\">\n                        <circle fill=\"#E42612\" cx=\"111\" cy=\"111\" r=\"111\">\n                        </circle>\n                        <path\n                            d=\"M68.458 160.012c-.099-.276-.294-.48-.589-.612l-6.968-2.74a1.224 1.224 0 0 0-.957 0 1.503 1.503 0 0 0-.71.587c-.852 1.37-2.005 2.489-3.46 3.353-1.456.865-3.084 1.296-4.882 1.296a8.036 8.036 0 0 1-3.509-.784 9.79 9.79 0 0 1-2.871-2.061 9.253 9.253 0 0 1-1.913-2.97 9.353 9.353 0 0 1-.687-3.557c0-1.21.228-2.387.687-3.532a9.486 9.486 0 0 1 4.784-5.104 8.05 8.05 0 0 1 3.509-.785c1.896 0 3.515.4 4.857 1.2 1.34.8 2.486 1.95 3.435 3.45.163.261.409.457.736.586.326.132.654.132.98 0l6.97-2.74c.294-.13.49-.343.588-.636a.934.934 0 0 0-.099-.831 30.786 30.786 0 0 0-3.115-4.137 17.79 17.79 0 0 0-3.803-3.205c-1.406-.88-2.977-1.566-4.71-2.056-1.735-.49-3.68-.734-5.84-.734-2.617 0-5.07.489-7.36 1.468-2.29.98-4.293 2.3-6.01 3.964a18.238 18.238 0 0 0-4.05 5.873c-.98 2.252-1.471 4.65-1.471 7.195s.49 4.944 1.472 7.195c.981 2.25 2.33 4.208 4.049 5.872 1.717 1.664 3.72 2.986 6.01 3.965 2.29.978 4.743 1.468 7.36 1.468 2.094 0 4.007-.244 5.741-.73 1.734-.487 3.312-1.168 4.735-2.045a17.979 17.979 0 0 0 3.852-3.189 27.994 27.994 0 0 0 3.14-4.167c.164-.293.197-.579.099-.857zm-.344 8.785c-.13.263-.179.49-.146.687a.96.96 0 0 0 .662.782c.18.066.352.098.515.098h8.44c.327 0 .646-.105.957-.319a1.82 1.82 0 0 0 .663-.758l1.373-2.937c.131-.293.351-.546.663-.758.31-.212.645-.319 1.006-.319H92.6c.327 0 .645.107.957.319.31.212.547.465.711.758l1.326 2.937c.162.293.4.547.71.758.311.214.646.319 1.007.319h8.39c.523 0 .875-.163 1.055-.49.18-.325.205-.636.074-.928l-14.328-33.282a1.826 1.826 0 0 0-.663-.758c-.31-.212-.63-.319-.956-.319h-6.87c-.36 0-.696.107-1.006.319-.31.212-.532.465-.663.758l-14.23 33.133zm16.39-12.161c-.132-.213-.132-.465 0-.76l2.454-5.92c.13-.295.276-.441.44-.441.164 0 .31.146.443.44.392.946.817 1.966 1.276 3.059.456 1.093.85 2.048 1.177 2.863.163.294.172.546.024.759-.147.212-.384.317-.711.317H85.24c-.36 0-.606-.105-.737-.317zm66.685-21.706a1.133 1.133 0 0 0-.83-.343h-6.836c-.326 0-.667.098-1.026.294-.357.195-.634.424-.829.685l-9.444 13.802c-.164.26-.378.391-.64.391s-.492-.13-.688-.391l-9.445-13.802c-.162-.261-.422-.49-.78-.685-.359-.196-.7-.294-1.026-.294h-6.835c-.325 0-.603.115-.83.343a1.132 1.132 0 0 0-.342.832v33.427c0 .326.113.605.34.832.23.229.506.343.832.343h7.372c.325 0 .602-.114.83-.343a1.13 1.13 0 0 0 .342-.832v-15.758c0-.327.147-.507.442-.538.295-.034.526.08.689.342l8.263 13.262c.197.262.475.392.836.392.36 0 .623-.13.787-.392l8.264-13.262c.195-.262.442-.376.737-.342.295.031.443.21.443.538v15.758c0 .326.114.605.341.832.228.229.505.343.83.343h7.373c.325 0 .602-.114.83-.343.228-.227.342-.506.342-.832v-33.427c0-.326-.114-.603-.342-.832zm30.768 24.79c1.788-.67 3.28-1.582 4.476-2.74a10.98 10.98 0 0 0 2.681-4.113c.59-1.582.886-3.286.886-5.115 0-1.826-.352-3.54-1.055-5.138-.704-1.599-1.652-3.001-2.846-4.209a13 13 0 0 0-4.22-2.839c-1.62-.685-3.345-1.028-5.177-1.028h-15.014c-.328 0-.607.115-.835.343-.23.229-.344.506-.344.832v33.476c0 .326.115.605.342.832.228.229.504.343.83.343h7.372c.326 0 .602-.114.83-.343.228-.227.342-.506.342-.832v-7.293c0-.324.115-.603.345-.831.23-.227.508-.342.836-.342h4.28c2.394 0 4.484-.335 6.271-1.003zm-4.088-15.811c.525.242.968.559 1.33.948.363.39.633.835.814 1.337.18.504.271 1.015.271 1.533a4.49 4.49 0 0 1-.863 2.7c-.575.795-1.487 1.192-2.736 1.192h-5.276c-.33 0-.609-.113-.84-.34a1.12 1.12 0 0 1-.344-.828v-5.74c0-.324.116-.6.345-.827.23-.226.51-.34.84-.34h4.634c.69 0 1.298.122 1.825.365zM73.316 104.578c3.11-1.157 5.705-2.739 7.788-4.744a19.006 19.006 0 0 0 4.665-7.114c1.027-2.74 1.54-5.688 1.54-8.85 0-3.164-.613-6.127-1.835-8.894-1.225-2.767-2.875-5.195-4.952-7.285-2.078-2.088-4.525-3.726-7.342-4.913C70.363 61.593 67.36 61 64.173 61H38.048c-.57 0-1.053.199-1.45.593-.4.396-.598.876-.598 1.44v57.934c0 .564.197 1.045.594 1.44.395.394.877.593 1.444.593h12.827c.566 0 1.048-.199 1.443-.594.397-.394.596-.875.596-1.44v-12.62c0-.563.198-1.044.599-1.44.399-.394.884-.592 1.455-.592h7.447c4.163 0 7.8-.578 10.911-1.736m-7.114-27.362c.915.42 1.686.97 2.315 1.642a6.684 6.684 0 0 1 1.416 2.314c.314.872.473 1.756.473 2.652 0 1.741-.502 3.299-1.502 4.674-1 1.376-2.589 2.06-4.762 2.06h-9.178c-.575 0-1.06-.195-1.46-.587-.4-.393-.6-.872-.6-1.432v-9.934c0-.56.2-1.037.6-1.43.4-.393.885-.59 1.46-.59h8.063c1.2 0 2.26.21 3.175.63m119.2-15.622a1.99 1.99 0 0 0-1.45-.593h-12.636c-.57 0-1.054.199-1.451.593-.4.396-.598.876-.598 1.44v30.322c0 .566-.186.876-.555.931-.37.057-.725-.14-1.067-.593L145.448 62.61c-.342-.451-.826-.832-1.452-1.143-.626-.31-1.225-.466-1.792-.466h-12.807c-.57 0-1.053.199-1.45.593-.4.396-.598.876-.598 1.44v57.934c0 .564.2 1.045.6 1.44a2 2 0 0 0 1.46.593h12.783a2 2 0 0 0 1.459-.594c.4-.394.601-.875.601-1.44V90.646c0-.564.184-.89.554-.975.368-.084.724.1 1.066.552l22.236 31.084c.341.451.824.846 1.449 1.184.624.34 1.22.51 1.788.51h12.61c.568 0 1.051-.199 1.448-.594a1.95 1.95 0 0 0 .597-1.44V63.034c0-.564-.2-1.044-.598-1.44M113.402 123.402c.399-.4.598-.883.598-1.455V71.053c0-.57-.2-1.056-.598-1.455A1.98 1.98 0 0 0 111.95 69h-12.9c-.626 0-1.124.2-1.494.598-.37.4-.556.884-.556 1.455v50.894c0 .572.185 1.056.556 1.455.37.4.868.598 1.495.598h12.9c.568 0 1.052-.199 1.45-.598\"\n                            fill=\"#FFF\">\n\n                        </path>\n                        <path d=\"M105 56c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10\"\n                              fill=\"#FFCE00\">\n                        </path>\n                    </g>\n                </svg>\n            </a>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Datareceiver = React.createContext();\n\nexport class Dataconnector extends React.Component {\n\n    constructor() {\n        super(...arguments);\n\n        this.state = {\n            inputValue: 0,\n            romanNumeral:''\n        };\n\n        this.convertIntegerIntoRomanNumber = this.convertIntegerIntoRomanNumber.bind(this);\n        this.handleChangeInput = this.handleChangeInput.bind(this);\n    }\n\n    handleChangeInput(e) {\n        this.setState({ inputValue: e.target.value });\n    }\n\n\n    convertIntegerIntoRomanNumber() {\n        let value = this.state.inputValue;\n        let result = '';\n        const decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n        const roman = [\"M\", \"CM\",\"D\",\"CD\",\"C\", \"XC\", \"L\", \"XL\", \"X\",\"IX\",\"V\",\"IV\",\"I\"];\n\n        for (let i = 0; i <= decimal.length; i++) {\n            while (value % decimal[i] < value) {\n                result += roman[i];\n                value -= decimal[i];\n            }\n        }\n\n        this.setState({\n            romanNumeral: this.state.romanNumeral = result,\n            inputValue: this.state.inputValue = 0,\n        });\n    }\n\n    render() {\n        return (\n            <Datareceiver.Provider value={{\n                state: this.state,\n                convertIntegerIntoRomanNumber: this.convertIntegerIntoRomanNumber,\n                handleChangeInput: this.handleChangeInput,\n            }}>\n                {this.props.children}\n            </Datareceiver.Provider>\n        );\n    }\n}\n\nDataconnector.propTypes = {\n    children: PropTypes.any,\n};\n","import React from 'react';\nimport './pageheader.css';\nimport Brand from '../../Components/Brand';\nimport { Datareceiver } from '../Dataconnector';\n\nexport default function Pageheader() {\n    return(\n        <header className='b-pageheader'>\n            <div className=\"pageheader-inner\">\n                <div className=\"pageheader-brand\">\n                    <Brand />\n                </div>\n                <Datareceiver.Consumer>\n                    {\n                        ( context ) => {\n                            console.log(context);\n                            return (\n                                <>\n                                    {\n                                        context.state.romanNumeral ?\n                                            (\n                                                <p className='pageheader-text'>\n                                                    {\n                                                        context.state.romanNumeral\n                                                    }\n                                                </p>\n                                            )\n                                            :\n                                            (\n\n                                                <h1 className='pageheader-title'>\n                                                    Convert integer into Roman numerals\n                                                </h1>\n\n\n                                            )\n                                    }\n                                </>\n                            );\n                        }\n                    }\n                </Datareceiver.Consumer>\n            </div>\n        </header>\n    )\n}\n","import React from 'react';\nimport './converter.css';\nimport { Datareceiver } from '../Dataconnector';\n\nexport default function Converter() {\n\n    return(\n        <div className=\"b-converter\">\n            <div className=\"converter-field\">\n                <label\n                    htmlFor=\"convertNumber\"\n                    className=\"converter-label\"\n                >\n                    Convert integer into Roman numbers\n                </label>\n                <Datareceiver.Consumer>\n                    {\n                        ({ inputValue, updateInputValue, convertIntegerIntoRomanNumber, handleChangeInput }) => (\n                            <>\n                                <div className=\"converter-input\">\n                                    <input\n                                        className=\"converter-input-inner\"\n                                        type=\"number\"\n                                        id='convertNumber'\n                                        value={ inputValue }\n                                        onChange={ handleChangeInput }\n                                        placeholder='Enter an integer number'\n                                        maxlength=\"4\"\n                                    />\n                                </div>\n                                <button\n                                    className=\"converter-btn\"\n                                    type='button'\n                                    value='convert number'\n                                    onClick={ convertIntegerIntoRomanNumber }\n                                >\n                                    <span className=\"converter-btn-text\">\n                                        Convert\n                                    </span>\n                                </button>\n                            </>\n                        )\n                    }\n                    </Datareceiver.Consumer>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './page.css';\nimport Pageheader from '../Components/Pageheader';\nimport Converter from '../Components/Converter';\nimport { Dataconnector } from '../Components/Dataconnector';\n\nexport default function Page() {\n\n    return(\n        <Dataconnector>\n            <div className='l-page'>\n                <div className=\"page-inner\">\n                    <Pageheader />\n                    <main className=\"page-main\">\n                        <div className=\"page-section\">\n                            <div className=\"page-section-inner\">\n                                <Converter />\n                            </div>\n                        </div>\n                    </main>\n                    <footer className=\"page-footer\">\n                        <div className=\"page-footer-inner\">\n                            <small className='page-footer-text'>\n                                Pincamp project, made with love by Debbie Derks 2018\n                            </small>\n                        </div>\n                    </footer>\n                </div>\n            </div>\n        </Dataconnector>\n    )\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Page from './Page/index.js';\n\nclass App extends Component {\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <Page/>\n            </div>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}